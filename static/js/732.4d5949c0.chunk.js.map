{"version":3,"file":"static/js/732.4d5949c0.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","redux/filter/filterSelectors.js","services/getRandomHexColor.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/contactsList.module.css?4445","components/ContactList/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/loaderWrapper.module.css?c047","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/Phonebook.jsx","redux/contacts/contactsSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"adding-form\":\"contactForm_adding-form__h8f+a\",\"adding-form__label\":\"contactForm_adding-form__label__Agjsu\",\"adding-form__input\":\"contactForm_adding-form__input__yvL0b\",\"adding-form__button\":\"contactForm_adding-form__button__YWdZg\",\"adding-form__field-container\":\"contactForm_adding-form__field-container__sBXmV\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport css from './contactForm.module.css';\n\nexport default function ContactForm() {\n  const [state, setState] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addContact(state));\n    setState({ name: '', number: '' });\n  };\n\n  return (\n    <form className={css['adding-form']} onSubmit={handleSubmit}>\n      <div className={css['adding-form__field-container']}>\n        <label className={css['adding-form__label']} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          className={css['adding-form__input']}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={state.name}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className={css['adding-form__field-container']}>\n        <label className={css['adding-form__label']} htmlFor=\"number\">\n          Phone\n        </label>\n        <input\n          className={css['adding-form__input']}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={state.number}\n          onChange={handleChange}\n        />\n      </div>\n\n      <button className={css['adding-form__button']} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter-container\":\"filter_filter-container__+veDX\",\"filter__label\":\"filter_filter__label__hM98R\",\"filter__input\":\"filter_filter__input__WCXD2\"};","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport css from './filter.module.css';\n\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(changeFilter(event.target.value.trim()));\n  };\n\n  return (\n    <div className={css['filter-container']}>\n      <label className={css['filter__label']} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        className={css['filter__input']}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","const selectFilter = state => state.filter;\n\nexport { selectFilter };","export default function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts-list\":\"contactsList_contacts-list__bqw2g\",\"contact-container\":\"contactsList_contact-container__jZQ6M\",\"contact-name\":\"contactsList_contact-name__4iMR5\",\"contact-phone\":\"contactsList_contact-phone__c6bEe\",\"contact-actions\":\"contactsList_contact-actions__JZseO\",\"contact-actions__button\":\"contactsList_contact-actions__button__HpHSD\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport getRandomHexColor from 'services/getRandomHexColor';\n\nimport css from './contactsList.module.css';\n\nexport default function ContactListItem({ id, name, number }) {\n  return (\n    <li\n      className={css['contact-container']}\n      style={{ backgroundColor: getRandomHexColor() }}\n    >\n      <div className={css['contact-data']}>\n        <div className={css['contact-name']}>{name}</div>\n        <a\n          className={css['contact-phone']}\n          href={`tel:${number}`}\n          style={{ color: getRandomHexColor() }}\n        >\n          {number}\n        </a>\n      </div>\n\n      <div className={css['contact-actions']}>\n        <Link\n          to={`/edit-contact/${id}`}\n          className={css['contact-actions__button']}\n        >\n          Change\n        </Link>\n        <button className={css['contact-actions__button']} name=\"delete\" id={id}>\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"loaderWrapper_wrapper__WDz6B\"};","import { Dna } from 'react-loader-spinner';\nimport css from './loaderWrapper.module.css';\n\n\nexport default function Loader() {\n  return (\n    <Dna visible={true} ariaLabel=\"dna-loading\" wrapperClass={css.wrapper} />\n  );\n}","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, removeContact } from 'redux/contacts/contactsOperations';\n\nimport {\n  selectContacts,\n  selectContactsAreLoading,\n  selectContactsError,\n} from 'redux/contacts/contactsSelectors';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nimport ContactListItem from './ContactListItem';\nimport Loader from 'components/Loader/Loader';\n\nimport css from './contactsList.module.css';\n\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  let areContactsLoading = useSelector(selectContactsAreLoading);\n  let error = useSelector(selectContactsError);\n  let contacts = useSelector(selectContacts);\n  let filter = useSelector(selectFilter);\n\n  let list = filter\n    ? contacts.filter(contact => contact.name.match(new RegExp(filter, 'gi')))\n    : contacts;\n\n  const deleteContact = event => {\n    if (event.target.name === 'delete') {\n      dispatch(removeContact(event.target.id));\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {areContactsLoading && !error ? (\n        <Loader />\n      ) : (\n        <ul className={css['contacts-list']} onClick={deleteContact}>\n          {list.map(item => (\n            <ContactListItem\n              key={item.id}\n              id={item.id}\n              name={item.name}\n              number={item.number}\n            />\n          ))}\n        </ul>\n      )}\n      {error && `Error: ${error}`}\n    </>\n  );\n}\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\n\nexport default function Phonebook() {\n  return(\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","const selectContacts = state => state.contacts.items;\nconst selectContactsAreLoading = state => state.contacts.areLoading;\nconst selectContactsError = state => state.contacts.error;\n\n\nexport { selectContacts, selectContactsAreLoading, selectContactsError };"],"names":["ContactForm","useState","name","number","state","setState","dispatch","useDispatch","handleChange","event","target","value","prevState","className","css","onSubmit","preventDefault","addContact","htmlFor","type","pattern","title","required","onChange","Filter","changeFilter","trim","selectFilter","filter","getRandomHexColor","Math","floor","random","toString","padStart","ContactListItem","id","style","backgroundColor","href","color","to","Loader","visible","ariaLabel","wrapperClass","ContactList","areContactsLoading","useSelector","selectContactsAreLoading","error","selectContactsError","contacts","selectContacts","list","contact","match","RegExp","useEffect","getContacts","onClick","removeContact","map","item","Phonebook","items","areLoading"],"sourceRoot":""}